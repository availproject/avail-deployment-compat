- name: Create folder for templates
  ansible.builtin.file: 
    path: "{{ node_base_path }}"
    state: directory 
    mode: '0750'

- name: Create folder for chainspecs
  ansible.builtin.file:
    path: "{{ node_base_path }}/genesis"
    state: directory
    mode: 0755

- name: create full-node entrypoint
  ansible.builtin.template:
    src: "./templates/da.sh"
    dest: "{{ node_base_path }}/da.sh"
    mode: '0755'
  notify: restart node

- name: create v2 testnet chainspec
  ansible.builtin.template:
    src: "../../templates/genesis/testnet-v2.chain.spec.raw.json"
    dest: "{{ node_base_path }}/genesis/testnet-v2.chain.spec.raw.json"
    mode: 755
  notify: restart node

- name: create internal network
  community.docker.docker_network:
    name: "{{ node_network_mode }}"

- name: start full-node 
  community.docker.docker_container:
    name: da-client
    image: 0xpolygon/avail:{{ node_docker_tag }}
    tmpfs: /tmp
    volumes:
      - "{{ node_base_path  }}/full_node_state:/da/state"
      - "{{ node_base_path  }}/da.sh:/da/bin/da.sh"
      - "{{ node_base_path }}/genesis:/da/genesis"
    labels:
      com.datadoghq.ad.check_names: '["openmetrics"]'
      com.datadoghq.ad.init_configs: "[{}]"
      com.datadoghq.ad.instances: '[{"openmetrics_endpoint":"http://%%host%%:9615/metrics", "namespace": "avail", "metrics": ["substrate*"]}]'
    ports:
      - 9933:9933
      - 9944:9944
      - 30333:30333
    entrypoint: /da/bin/da.sh
    network_mode: "{{ node_network_mode }}"
    restart_policy: always
