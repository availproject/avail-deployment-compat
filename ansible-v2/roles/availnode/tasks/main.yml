---

- name: Creating base path
  ansible.builtin.file:
    path: "{{ node_base_path }}"
    state: directory
    mode: 0755

- name: Create folder for chainspecs
  ansible.builtin.file:
    path: "{{ node_base_path }}/genesis"
    state: directory
    mode: 0755

- name: Create folder for keystore
  ansible.builtin.file:
    path: "{{ node_base_path }}/keystore"
    state: directory
    mode: 0755

- name: Create folder for state
  ansible.builtin.file:
    path: "{{ node_base_path }}/state"
    state: directory
    mode: 0755

- name: create entrypoint
  tags:
    - templates
  ansible.builtin.template:
    src: "./templates/da.sh"
    dest: "{{ node_base_path }}/da.sh"
    mode: 755
  notify: restart node

- name: create secret.txt
  ansible.builtin.template:
    src: "./templates/secret.txt"
    dest: "{{ node_base_path }}/secret.txt"
    mode: 755
  notify: restart node
  # TODO if this changes we need to rotate keys

- name: Dropping new lines from secret
  ansible.builtin.replace:
    path: "{{ node_base_path }}/secret.txt"
    regexp: '[\n\r]'
    replace: ''

- name: create nodeprivkey.txt
  ansible.builtin.template:
    src: "./templates/nodeprivkey.txt"
    dest: "{{ node_base_path }}/nodeprivkey.txt"
    mode: 755
  notify: restart node

- name: Dropping new lines from node key
  ansible.builtin.replace:
    path: "{{ node_base_path }}/nodeprivkey.txt"
    regexp: '[\n\r]'
    replace: ''


- name: create chainspec
  ansible.builtin.template:
    src: "../../build/{{ deployment_name }}/populated.devnet.chainspec.raw.json"
    dest: "{{ node_base_path }}/genesis/devnet.chain.spec.raw.json"
    mode: 755
  notify: restart node

- name: Start avail docker image
  docker_container:
    name: da-client
    image: 0xpolygon/avail:{{ node_docker_tag }}
    entrypoint: "/var/avail/da.sh"
    ports:
      - "{{ node_port }}:{{ node_port }}"
      - "{{ node_rpc_port }}:{{ node_rpc_port }}"
      - "{{ node_ws_port }}:{{ node_ws_port }}"
    labels:
      com.datadoghq.ad.check_names: '["openmetrics"]'
      com.datadoghq.ad.init_configs: "[{}]"
      com.datadoghq.ad.instances: '[{"openmetrics_endpoint":"http://%%host%%:9615/metrics", "namespace": "avail", "metrics": ["substrate*"]}]'
    volumes:
      - "{{ node_base_path }}:/var/avail"
    state: started
    restart_policy: always
